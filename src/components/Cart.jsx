// src/components/Cart.jsx

// Import hook c·ªßa react-redux
import { useDispatch, useSelector } from "react-redux"; 
//   useDispatch: g·ª≠i action l√™n Redux store
//   useSelector: ƒë·ªçc d·ªØ li·ªáu t·ª´ Redux store

// Import component con hi·ªÉn th·ªã t·ª´ng s·∫£n ph·∫©m trong gi·ªè
import CartItem from "./CartItem"; 

// Import action x√≥a gi·ªè h√†ng t·ª´ slice
import { clearCart } from "../redux/cart/cartSlice"; 

// Component Cart ch√≠nh
export default function Cart() {
  const dispatch = useDispatch(); 
  //   L·∫•y h√†m dispatch ƒë·ªÉ g·ª≠i action l√™n Redux store

  // L·∫•y danh s√°ch s·∫£n ph·∫©m trong gi·ªè t·ª´ state Redux
  // N·∫øu state.cart.items kh√¥ng c√≥ th√¨ m·∫∑c ƒë·ªãnh l√† []
  const items = useSelector((state) => state.cart.items ?? []);

  // T√≠nh t·ªïng s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
  const totalQty = items.reduce((sum, it) => sum + (it.qty || 0), 0);

  // T√≠nh t·ªïng ti·ªÅn = t·ªïng (s·ªë l∆∞·ª£ng * gi√°) c·ªßa t·ª´ng s·∫£n ph·∫©m
  const totalPrice = items.reduce(
    (sum, it) => sum + (it.qty || 0) * (it.price || 0),
    0
  );

  // H√†m format s·ªë ti·ªÅn theo VND (c√≥ d·∫•u . ngƒÉn c√°ch h√†ng ngh√¨n)
  const formatVND = (n) =>
    Number(n || 0).toLocaleString("vi-VN", { maximumFractionDigits: 0 });

  return (
    // Kh·ªëi aside hi·ªÉn th·ªã gi·ªè h√†ng, √°p d·ª•ng class CSS "sidebar"
    <aside className="sidebar">

      {/* Header gi·ªè h√†ng + badge t·ªïng s·ªë l∆∞·ª£ng */}
      <div 
        style={{ display: "flex", alignItems: "center", justifyContent: "space-between" }}
      >
        <h2 className="section-title" style={{ margin: 0 }}>Gi·ªè h√†ng</h2>
        <span className="badge" title="T·ªïng s·ªë l∆∞·ª£ng">{totalQty}</span>
      </div>

      {/* Danh s√°ch s·∫£n ph·∫©m trong gi·ªè */}
      <div className="cart-list">
        {items.length === 0 ? (
          // N·∫øu gi·ªè r·ªóng th√¨ hi·ªÉn th·ªã ch·ªØ "Ch∆∞a c√≥ s·∫£n ph·∫©m."
          <div className="muted">Ch∆∞a c√≥ s·∫£n ph·∫©m.</div>
        ) : (
          // N·∫øu c√≥ s·∫£n ph·∫©m th√¨ render ra t·ª´ng CartItem
          items.map((item) => <CartItem key={item.id} item={item} />)
        )}
      </div>

      {/* ƒê∆∞·ªùng k·∫ª ngang ph√¢n c√°ch ph·∫ßn list v√† footer */}
      <hr className="hr" />

      {/* Ph·∫ßn t·ªïng c·ªông: s·ªë l∆∞·ª£ng v√† t·ªïng ti·ªÅn */}
      <div className="totals">
        <div>T·ªïng ({totalQty} SP)</div>
        <div>
          {formatVND(totalPrice)} <span className="currency">ƒë</span>
        </div>
      </div>

      {/* C√°c n√∫t h√†nh ƒë·ªông: Thanh to√°n v√† X√≥a gi·ªè */}
      <div className="stack">
        <button
          className="btn btn-primary"
          disabled={items.length === 0} // N·∫øu gi·ªè r·ªóng th√¨ disable
          onClick={() => alert("Ch·ª©c nƒÉng thanh to√°n ƒëang ph√°t tri·ªÉn üòÖ")}
        >
          Thanh to√°n
        </button>
        <button
          className="btn btn-danger"
          disabled={items.length === 0} // N·∫øu gi·ªè r·ªóng th√¨ disable
          onClick={() => dispatch(clearCart())} // X√≥a to√†n b·ªô gi·ªè h√†ng
        >
          X√≥a gi·ªè
        </button>
      </div>
    </aside>
  );
}
